{"version":3,"file":"static/js/96.16772c7e.chunk.js","mappings":"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","sources":["components/Error.jsx","pages/PostDetailPage.jsx","servise/api.js"],"sourcesContent":["import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;\n","import React, { Suspense, lazy, useEffect, useRef } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\n\nimport { findPostById } from 'servise/api';\nimport Loader from 'components/Loader';\nimport ErrorMessage from 'components/Error';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst CommentPage = lazy(() => import('pages/CommentPage'));\n\nexport default function PostDetailPage() {\n  const { postId } = useParams();\n\n  const location = useLocation();\n  console.log(location);\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  // const [postDetails, setPostDetails] = useState(null);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  const postDetails = useSelector(state => state.postDetails.postDetailsData);\n  const isLoading = useSelector(state => state.postDetails.isLoading);\n  const error = useSelector(state => state.postDetails.error);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!postId) return;\n\n    const fetchAllPosts = async () => {\n      try {\n        // setIsLoading(true);\n        dispatch({ type: 'postDetails / setIsLoading', payload: true });\n        const postData = await findPostById(postId);\n        dispatch({ type: 'postDetails/setPostDetails', payload: postData });\n        // setPostDetails(postData);\n      } catch (error) {\n        dispatch({ type: 'postDetails/setError', payload: error.message });\n        // setError(error.message);\n      } finally {\n        // setIsLoading(false);\n        dispatch({ type: 'postDetails / setIsLoading', payload: false });\n      }\n    };\n\n    fetchAllPosts();\n  }, [postId, dispatch]);\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go Back</Link>\n\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      {postDetails !== null && (\n        <div>\n          <h2>Post Title: {postDetails.title}</h2>\n          <p>Post Body: {postDetails.body}</p>\n        </div>\n      )}\n\n      <div>\n        <NavLink to=\"comments\" className=\"header-link\">\n          Comments\n        </NavLink>\n      </div>\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"comments\" element={<CommentPage />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nexport const fetchPosts = async () => {\n  const { data } = await axios.get(\n    'https://jsonplaceholder.typicode.com/posts/'\n  );\n  //   throw new Error('Ooohs! Some error...');\n  return data;\n};\n\nexport const findPostById = async postId => {\n  const { data } = await axios.get(\n    `https://jsonplaceholder.typicode.com/posts/${postId}`\n  );\n\n  return data;\n};\n\nexport const findPostCommentsById = async postId => {\n  const { data } = await axios.get(\n    `https://jsonplaceholder.typicode.com/posts/${postId}/comments`\n  );\n  return data;\n};\n"],"names":["_ref","message","_jsx","className","children","CommentPage","lazy","PostDetailPage","_location$state$from","_location$state","postId","useParams","location","useLocation","console","log","backLinkHref","useRef","state","from","postDetails","useSelector","postDetailsData","isLoading","error","dispatch","useDispatch","useEffect","fetchAllPosts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","postData","wrap","_context","prev","next","type","payload","findPostById","sent","t0","finish","stop","apply","arguments","_jsxs","Link","to","current","Loader","ErrorMessage","title","body","NavLink","Suspense","fallback","Routes","Route","path","element","fetchPosts","_yield$axios$get","data","axios","abrupt","_ref2","_callee2","_yield$axios$get2","_context2","concat","_x","findPostCommentsById","_ref3","_callee3","_yield$axios$get3","_context3","_x2"],"sourceRoot":""}